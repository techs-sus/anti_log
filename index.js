import o from"chalk";import e from"clipboardy";import t from"conf";import n from"express";import a from"fs/promises";import i from"ngrok";import r from"os";import s from"vorpal";import c from"process";import l from"dotenv";l.config(),null==c.env.NGROK_AUTH&&(console.log("No ngrok auth key!"),c.exit(1));const p=new s,m=new t({projectName:"anti_log"}),d=r.userInfo().homedir,u=c.cwd()+"/";let y,f,g;async function v(o){(m.get("auto_copy")||o)&&await e.write(`c/NS(game:GetService("HttpService"):GetAsync('"${g||"http://localhost:3002"}"',false),script);script:Destroy()`)}p.command("clear","Clears terminal.").action((async()=>{console.clear()})),p.command("autocopy <boolean>","Decides if autocopying the url will happen when a new tunnel is made.").action((async o=>{const e=Boolean(o.boolean);m.set("auto_copy",e),p.log(e?"Auto copy set to true.":"Auto copy set to false.")})),p.command("copy","Copy the tun.url to your clipboard. (clipboardy)").action((async()=>{void 0!==g?(v(!0),p.log(g)):p.log("You must serve a file first.")})),p.command("stop","Stop serving the file.").action((async()=>{void 0!==g&&(i.disconnect(g),p.log("Closed tunnel."),g=void 0),void 0!==f&&(f.close(),p.log("Closed express server."),f=void 0)})),p.command("serve <file>","Serves <file> with protection.").action((async o=>{if(void 0!==f)return void p.log("Please run stop.");const e=o.file.replace("~",d).replace("./",u);y=n();let t=!0;y.get("/",(async(o,n)=>{if(t){const o=(await a.readFile(e)).toString().split("").map((o=>"\\x"+o.charCodeAt(0).toString(16))).join("");t=!1,n.status(200).send('game:GetService("HttpService"):GetAsync('+(g||"https://localhost:3002")+`);script:Destroy();local _ = NS("${o}", owner.PlayerGui);_.Name='SB_Tusk_Maidenless'`)}else n.status(404).send("no!!!"),setTimeout((async()=>{void 0!==g&&i.disconnect(g),t=!0,g=(await i.connect({authtoken:c.env.NGROK_AUTH,port:3002,subdomain:"antilog"})).replace("https","http"),v(!1)}),200)})),f=y.listen(3002,(async()=>{g=(await i.connect({authtoken:c.env.NGROK_AUTH,port:3002,subdomain:"antilog"})).replace("https","http"),p.log("Tunnel ready!"),v(!1)}))})),p.delimiter(o.magenta(c.cwd().replace(d,"~")+" >")).show();