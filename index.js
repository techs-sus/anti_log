import o from"chalk";import e from"clipboardy";import t from"conf";import a from"express";import r from"fs/promises";import i from"localtunnel";import n from"os";import{v4 as s}from"uuid";import c from"vorpal";const l=new c,m=new t({projectName:"anti_log"}),p=n.userInfo().homedir,u=process.cwd()+"/";let d,f,y;async function w(){m.get("auto_copy")&&await e.write("h/"+y?.url)}l.command("clear","Clears terminal.").action((async()=>{console.clear()})),l.command("autocopy <boolean>","Decides if autocopying the url will happen when a new tunnel is made.").action((async o=>{const e=Boolean(o.boolean);m.set("auto_copy",e),l.log(e?"Auto copy set to true.":"Auto copy set to false.")})),l.command("copy","Copy the tun.url to your clipboard. (clipboardy)").action((async()=>{void 0!==y?(await e.write("h/"+y.url),l.log(y.url)):l.log("You must serve a file first.")})),l.command("stop","Stop serving the file.").action((async()=>{void 0!==y&&(y.close(),l.log("Closed tunnel."),y=void 0),void 0!==f&&(f.close(),l.log("Closed express server."),f=void 0)})),l.command("serve <file>","Serves <file> with protection.").action((async o=>{if(void 0!==f)return void l.log("Please run stop.");const e=o.file.replace("~",p).replace("./",u);d=a(),d.get("/",(async(o,t)=>{const a=(await r.readFile(e)).toString();setTimeout((()=>t.status(200).send(a)),3e3),setTimeout((async()=>{void 0!==y&&y.close(),y=await i({subdomain:s(),port:3002}),w()}),3200)})),f=d.listen(3002,(async()=>{y=await i({subdomain:s(),port:3002}),l.log("Tunnel ready!"),w()}))})),l.delimiter(o.magenta(process.cwd().replace(p,"~")+" >")).show();