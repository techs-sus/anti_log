import o from"dotenv";import e from"fs/promises";import t from"chalk";import{v4 as r}from"uuid";import a from"clipboardy";import i from"conf";import c from"express";import l from"os";import n from"vorpal";import s from"process";import m from"localtunnel";import p from"vorpal-autocomplete-fs";const d=new n,u=new i({projectName:"anti_log"}),y=l.userInfo().homedir;o.config();const f=s.cwd()+"/";let g,h,w;async function v(o){(u.get("auto_copy")||o)&&await a.write(`c/NS(game:GetService("HttpService"):GetAsync('"${w?.url||"http://localhost:3002"}"',false),script);script:Destroy()`)}d.command("clear","Clears terminal.").action((async()=>{console.clear()})),d.command("autocopy <boolean>","Decides if autocopying the url will happen when a new tunnel is made.").action((async o=>{const e=Boolean(o.boolean);u.set("auto_copy",e),d.log(e?"Auto copy set to true.":"Auto copy set to false.")})),d.command("copy","Copy the tun.url to your clipboard. (clipboardy)").action((async()=>{void 0!==w?(v(!0),d.log(w.url)):d.log("You must serve a file first.")})),d.command("stop","Stop serving the file.").action((async()=>{void 0!==w&&(w.close(),d.log("Closed tunnel."),w=void 0),void 0!==h&&(h.close(),d.log("Closed express server."),h=void 0)})),d.command("cd <directory>","Change to a directory.").autocomplete(p({directory:!0})).action((async o=>{s.chdir(o.directory),d.delimiter(t.magenta(s.cwd().replace(y,"~")+" >")).show()})),d.command("ls","List all files in cwd").action((async()=>{for(const o of await e.readdir(s.cwd()))o.endsWith(".lua")&&d.log(t.blue(o))||d.log(o)})),d.command("serve <file>","Serves <file> with protection.").autocomplete(p({directory:!1})).action((async o=>{if(void 0!==h)return void d.log("Please run stop.");const t=o.file.replace("~",y).replace("./",f);g=c();let a=!0;g.get("/",(async(o,i)=>{if(a){const o=(await e.readFile(t)).toString().split("").map((o=>"\\x"+o.charCodeAt(0).toString(16))).join("");a=!1,i.status(200).send('local h=game:GetService("HttpService");pcall(h.GetAsync,h,"'+(w?.url||"https://localhost:3002")+`");script:Destroy();local _ = NS("${o}", owner.PlayerGui);_.Name = h:GenerateGUID()`)}else i.status(404).send("no!!! (No way! Stop logging me!!1)"),setTimeout((async()=>{void 0!==w&&w.close(),a=!0,w=await m({subdomain:r(),port:3002}),v(!1)}),200)})),h=g.listen(3002,(async()=>{w=await m({subdomain:r(),port:3002}),d.log("Tunnel ready!"),v(!1)}))})),d.delimiter(t.magenta(s.cwd().replace(y,"~")+" >")).show();